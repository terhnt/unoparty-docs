"use strict";(self.webpackChunkunoparty_docs=self.webpackChunkunoparty_docs||[]).push([[923],{3905:function(e,t,a){a.d(t,{Zo:function(){return _},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},_=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,_=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,k=u["".concat(o,".").concat(m)]||u[m]||d[m]||s;return a?r.createElement(k,l(l({ref:t},_),{},{components:a})):r.createElement(k,l({ref:t},_))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<s;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6073:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},assets:function(){return _},toc:function(){return d},default:function(){return m}});var r=a(7462),n=a(3366),s=(a(7294),a(3905)),l=["components"],i={sidebar_position:5},o="Unoblock API",p={unversionedId:"develop/unoblock/api",id:"develop/unoblock/api",title:"Unoblock API",description:"For an overview of unoblock, see here.",source:"@site/docs/develop/unoblock/api.md",sourceDirName:"develop/unoblock",slug:"/develop/unoblock/api",permalink:"/unoparty-docs/docs/develop/unoblock/api",editUrl:"https://github.com/terhnt/unoparty-docs/tree/main/packages/create-docusaurus/templates/shared/docs/develop/unoblock/api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"Develop",previous:{title:"Technical Specification",permalink:"/unoparty-docs/docs/develop/api"},next:{title:"Writing unoblock Plug-in Modules",permalink:"/unoparty-docs/docs/develop/unoblock/modules"}},_={},d=[{value:"Connecting to the API\u200b",id:"connecting-to-the-api",level:2},{value:"Terms &amp; Conventions\u200b",id:"terms--conventions",level:2},{value:"core API\u200b",id:"core-api",level:2},{value:"get_messagefeed_messages_by_index\u200b",id:"get_messagefeed_messages_by_index",level:3},{value:"get_chain_block_height\u200b",id:"get_chain_block_height",level:3},{value:"get_insight_block_info\u200b",id:"get_insight_block_info",level:3},{value:"get_chain_address_info\u200b",id:"get_chain_address_info",level:3},{value:"get_chain_txns_status\u200b",id:"get_chain_txns_status",level:3},{value:"get_last_n_messages\u200b",id:"get_last_n_messages",level:3},{value:"get_pubkey_for_address\u200b",id:"get_pubkey_for_address",level:3},{value:"get_script_pub_key\u200b",id:"get_script_pub_key",level:3},{value:"get_raw_transactions\u200b",id:"get_raw_transactions",level:3},{value:"assets Module API\u200b",id:"assets-module-api",level:2},{value:"get_normalized_balances\u200b",id:"get_normalized_balances",level:3},{value:"get_escrowed_balances\u200b",id:"get_escrowed_balances",level:3},{value:"get_assets_info\u200b",id:"get_assets_info",level:3},{value:"get_base_quote_asset\u200b",id:"get_base_quote_asset",level:3},{value:"get_owned_assets\u200b",id:"get_owned_assets",level:3},{value:"get_asset_pair_market_info\u200b",id:"get_asset_pair_market_info",level:3},{value:"get_asset_extended_info\u200b",id:"get_asset_extended_info",level:3},{value:"get_asset_history\u200b",id:"get_asset_history",level:3},{value:"get_balance_history\u200b",id:"get_balance_history",level:3},{value:"dex Module\u200b",id:"dex-module",level:2},{value:"get_market_price_summary\u200b",id:"get_market_price_summary",level:3},{value:"get_market_cap_history\u200b",id:"get_market_cap_history",level:3},{value:"get_market_info\u200b",id:"get_market_info",level:3},{value:"get_market_info_leaderboard\u200b",id:"get_market_info_leaderboard",level:3},{value:"get_market_price_history\u200b",id:"get_market_price_history",level:3},{value:"get_trade_history\u200b",id:"get_trade_history",level:3},{value:"get_order_book_simple\u200b",id:"get_order_book_simple",level:3},{value:"get_order_book_buysell\u200b",id:"get_order_book_buysell",level:3},{value:"get_users_pairs\u200b",id:"get_users_pairs",level:3},{value:"get_market_orders\u200b",id:"get_market_orders",level:3},{value:"get_market_trades\u200b",id:"get_market_trades",level:3},{value:"get_markets_list\u200b",id:"get_markets_list",level:3},{value:"get_market_details\u200b",id:"get_market_details",level:3},{value:"betting Module\u200b",id:"betting-module",level:2},{value:"get_bets\u200b",id:"get_bets",level:3},{value:"get_user_bets\u200b",id:"get_user_bets",level:3},{value:"get_feed\u200b",id:"get_feed",level:3},{value:"get_feeds_by_source\u200b",id:"get_feeds_by_source",level:3},{value:"parse_base64_feed\u200b",id:"parse_base64_feed",level:3},{value:"unowallet Module\u200b",id:"unowallet-module",level:2},{value:"is_ready\u200b",id:"is_ready",level:3},{value:"get_reflected_host_info\u200b",id:"get_reflected_host_info",level:3},{value:"get_wallet_stats\u200b",id:"get_wallet_stats",level:3},{value:"get_preferences\u200b",id:"get_preferences",level:3},{value:"store_preferences\u200b",id:"store_preferences",level:3},{value:"create_armory_utx\u200b",id:"create_armory_utx",level:3},{value:"convert_armory_signedtx_to_raw_hex\u200b",id:"convert_armory_signedtx_to_raw_hex",level:3},{value:"create_support_case\u200b",id:"create_support_case",level:3},{value:"unowallet_iofeeds Module\u200b",id:"unowallet_iofeeds-module",level:2},{value:"get_num_users_online\u200b",id:"get_num_users_online",level:3},{value:"is_chat_handle_in_use\u200b",id:"is_chat_handle_in_use",level:3},{value:"get_chat_handle\u200b",id:"get_chat_handle",level:3},{value:"store_chat_handle\u200b",id:"store_chat_handle",level:3},{value:"get_chat_history\u200b",id:"get_chat_history",level:3},{value:"is_wallet_online\u200b",id:"is_wallet_online",level:3},{value:"transaction_stats Module\u200b",id:"transaction_stats-module",level:2},{value:"get_transaction_stats\u200b",id:"get_transaction_stats",level:3}],u={toc:d};function m(e){var t=e.components,a=(0,n.Z)(e,l);return(0,s.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"unoblock-api"},"Unoblock API"),(0,s.kt)("p",null,"For an overview of ",(0,s.kt)("inlineCode",{parentName:"p"},"unoblock"),", see ",(0,s.kt)("a",{parentName:"p",href:"/docs/advanced/architecture/"},"here"),"."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"unoblock")," release information is available from ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/terhnt/unoblock/releases"},"this link"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Warning:")," ",(0,s.kt)("em",{parentName:"p"},"This API documentation is INCOMPLETE. It contains errors, omissions, etc., and could change drastically at any time.")),(0,s.kt)("h2",{id:"connecting-to-the-api"},"Connecting to the API",(0,s.kt)("a",{parentName:"h2",href:"#connecting-to-the-api"},"\u200b")),(0,s.kt)("p",null,"By default, ",(0,s.kt)("inlineCode",{parentName:"p"},"unoblock")," will listen on port ",(0,s.kt)("inlineCode",{parentName:"p"},"4420")," for API requests. API requests are made via a HTTP POST request to ",(0,s.kt)("inlineCode",{parentName:"p"},"/api/"),", with JSON-encoded data passed as the POST body. For more information on JSON RPC, please see the ",(0,s.kt)("a",{parentName:"p",href:"http://json-rpc.org/wiki/specification"},"JSON RPC specification"),"."),(0,s.kt)("h2",{id:"terms--conventions"},"Terms & Conventions",(0,s.kt)("a",{parentName:"h2",href:"#terms--conventions"},"\u200b")),(0,s.kt)("p",null,"The API calls documented are categorized based on the ",(0,s.kt)("inlineCode",{parentName:"p"},"unoblock")," module/plug-in they appear in. For a list of the various modules with a description of each one, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/develop/unoblock/modules"},"the unoblock modules document"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Return Types")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"[ ]")," indicates a list of one or more items, the structure will be detailed inside the brackets if regular."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"{ }")," indicates a hash/object with the keys indicated"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"'id'")," means a key named id."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"<id>")," means the key is based on some parameter. This will usually be based on the inputs to the function (for example a search parameter)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"('key')")," means an optional key that may or may not be present in the output. Usually configured by a parameter.")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"wallet IDs")),(0,s.kt)("p",null,"An individual Unowallet user needs a way to identify themselves to ",(0,s.kt)("inlineCode",{parentName:"p"},"unoblock")," for things like storing and retrieving their wallet preferences data, and more."),(0,s.kt)("p",null,"For this purpose, we define the concept of a wallet ID, which is simply the user's Unowallet 12-word password, double-hashed with SHA256 and converted to base 64."),(0,s.kt)("h2",{id:"core-api"},"core API",(0,s.kt)("a",{parentName:"h2",href:"#core-api"},"\u200b")),(0,s.kt)("p",null,"These API methods are part of the core ",(0,s.kt)("inlineCode",{parentName:"p"},"unoblock")," code, and not part of a plugin module."),(0,s.kt)("h3",{id:"get_messagefeed_messages_by_index"},"get","_","messagefeed","_","messages","_","by","_","index",(0,s.kt)("a",{parentName:"h3",href:"#get_messagefeed_messages_by_index"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","messagefeed","_","messages","_","by","_","index(message","_","indexes)")),(0,s.kt)("p",null,"Alias for unopartyd get","_","messages","_","by","_","index"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param list message","_","indexs:")," Message IDs to fetch"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," A list of messages")),(0,s.kt)("h3",{id:"get_chain_block_height"},"get","_","chain","_","block","_","height",(0,s.kt)("a",{parentName:"h3",href:"#get_chain_block_height"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","chain","_","block","_","height()")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use ",(0,s.kt)("inlineCode",{parentName:"p"},"get_chain_address_info")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," The height of the block chain")),(0,s.kt)("h3",{id:"get_insight_block_info"},"get","_","insight","_","block","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_insight_block_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","insight","_","block","_","info(block","_","hash)")),(0,s.kt)("p",null,"Get block info for a specific block hash from the backend (insight, unobtaniumd, etc)."),(0,s.kt)("h3",{id:"get_chain_address_info"},"get","_","chain","_","address","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_chain_address_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","chain","_","address","_","info(addresses, with","_","uxtos=True, with","_","last","_","txn","_","hashes=4)")),(0,s.kt)("p",null,"Get info for one or more addresses"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"parameter list addresses:")," Address to query"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"parameter boolean with","_","uxtos:")," Include Unspent"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"parameter int with","_","last","_","txn","_","hashes:")," Include n recent confirmed transactions"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Address info"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'addr', 'info',('uxto'),('last","_","txns'),('block","_","height')}","]")),(0,s.kt)("h3",{id:"get_chain_txns_status"},"get","_","chain","_","txns","_","status",(0,s.kt)("a",{parentName:"h3",href:"#get_chain_txns_status"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","chain","_","txns","_","status")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param list txn","_","hashes:")," A list of one or more txn hashes"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Transaction information"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'tx","_","hash', 'blockhash', 'confirmations', 'blocktime'}","]")),(0,s.kt)("h3",{id:"get_last_n_messages"},"get","_","last","_","n","_","messages",(0,s.kt)("a",{parentName:"h3",href:"#get_last_n_messages"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","last","_","n","_","messages(count=100)")),(0,s.kt)("p",null,"Return latest messaages"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param int count:")," Number of messages to return. Must be < 1000 if specified."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," A list of messages"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'raw","_","tx","_","type', ... other fields vary per tx type}","]")),(0,s.kt)("h3",{id:"get_pubkey_for_address"},"get","_","pubkey","_","for","_","address",(0,s.kt)("a",{parentName:"h3",href:"#get_pubkey_for_address"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","pubkey","_","for","_","address(address)")),(0,s.kt)("p",null,"Returns None if the address has made 0 transactions (as we wouldn't be able to get the public key)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"returns:")," String or None")),(0,s.kt)("h3",{id:"get_script_pub_key"},"get","_","script","_","pub","_","key",(0,s.kt)("a",{parentName:"h3",href:"#get_script_pub_key"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","script","_","pub","_","key(tx","_","hash, vout","_","index)")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"broadcast","_","tx(signed","_","tx","_","hex)")),(0,s.kt)("h3",{id:"get_raw_transactions"},"get","_","raw","_","transactions",(0,s.kt)("a",{parentName:"h3",href:"#get_raw_transactions"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","raw","_","transactions(address, start","_","ts=None, end","_","ts=None, limit=500):")),(0,s.kt)("p",null,"Gets raw transactions for a particular address"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param address:")," A single address string"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," The starting date & time. Should be a unix epoch object. If passed as None, defaults to 60 days before the end","_","date"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," The ending date & time. Should be a unix epoch object. If passed as None, defaults to the current date & time"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param limit:")," the maximum number of transactions to return; defaults to ten thousand"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Returns the data, ordered from newest txn to oldest. If any limit is applied, it will cut back from the oldest results"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {id: {status, tx","_","hash, ","_","divisible, ","_","tx","_","index, block","_","index, ","_","category, destination, tx","_","index, ","_","block","_","time, source, asset, ","_","command, quantity}}")),(0,s.kt)("p",null,"####proxy","_","to","_","unopartyd"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"proxy","_","to","_","unopartyd(method='', params={})")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param method:")," Method name to call in unopartyd."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param params:")," Array of function parameters."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"returns:")," The method response from unopartyd")),(0,s.kt)("p",null,"Relays a request to the unopartyd server, with the given method and params, and returns the result. See the API documentation for available methods."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"NOTE:")," This method may be depreciated/removed in the future."),(0,s.kt)("h2",{id:"assets-module-api"},"assets Module API",(0,s.kt)("a",{parentName:"h2",href:"#assets-module-api"},"\u200b")),(0,s.kt)("h3",{id:"get_normalized_balances"},"get","_","normalized","_","balances",(0,s.kt)("a",{parentName:"h3",href:"#get_normalized_balances"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","normalized","_","balances(addresses)")),(0,s.kt)("p",null,"This call augments unoparty's get","_","balances with a normalized","_","quantity field. It also will include any owned assets for an address, even if their balance is zero. NOTE: Does not retrieve BTC balance. Use get","_","address","_","info for that."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param addresses:")," The addresses to retrieve balances on"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Balances are returned as a list of dicts, with each dict having the following structure:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"address: The address with the asset balance"),(0,s.kt)("li",{parentName:"ul"},'asset: The asset (e.g. "XUP")'),(0,s.kt)("li",{parentName:"ul"},"owner: Set to True if this address is the owner of the asset"),(0,s.kt)("li",{parentName:"ul"},"quantity: The quantity in satoshi"),(0,s.kt)("li",{parentName:"ul"},"normalized","_","quantity: The quantity, as a human readable number")))),(0,s.kt)("h3",{id:"get_escrowed_balances"},"get","_","escrowed","_","balances",(0,s.kt)("a",{parentName:"h3",href:"#get_escrowed_balances"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","escrowed","_","balances(addresses)")),(0,s.kt)("p",null,"Gets a list of address balances that are escrowed away by the protocol (either due to an open trade or bet)."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param list addresses:")," List of addresses to check"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," An array of assets held in escrow"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"{<address of escrowee>:{<asset>:<amount>}}"))),(0,s.kt)("h3",{id:"get_assets_info"},"get","_","assets","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_assets_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","assets","_","info(assetsList)")),(0,s.kt)("p",null,"Returns information on the specified assets."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param assetsList"),": A list of one or more asset names."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," A list of dicts, one dict for each asset provided in ",(0,s.kt)("inlineCode",{parentName:"li"},"assetsList"),":",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},'asset: The name of the asset (e.g. "XUP")'),(0,s.kt)("li",{parentName:"ul"},"owner: The address of the current owner of the asset"),(0,s.kt)("li",{parentName:"ul"},"divisible: True if the asset is divisible, False otherwise"),(0,s.kt)("li",{parentName:"ul"},"locked: True if the asset is locked, False otherwise"),(0,s.kt)("li",{parentName:"ul"},"supply: The current supply of the asset"),(0,s.kt)("li",{parentName:"ul"},"description: The asset's current description"),(0,s.kt)("li",{parentName:"ul"},"issuer: The issuing address of the asset")))),(0,s.kt)("h3",{id:"get_base_quote_asset"},"get","_","base","_","quote","_","asset",(0,s.kt)("a",{parentName:"h3",href:"#get_base_quote_asset"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","base","_","quote","_","asset(asset1, asset2)")),(0,s.kt)("p",null,"Given two arbitrary assets, returns the base asset and the quote asset."),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use ",(0,s.kt)("inlineCode",{parentName:"p"},"get_market_info/get_market_details")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"{'base_asset', 'quote_asset', 'pair_name'}"))),(0,s.kt)("h3",{id:"get_owned_assets"},"get","_","owned","_","assets",(0,s.kt)("a",{parentName:"h3",href:"#get_owned_assets"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","owned","_","assets(addresses)")),(0,s.kt)("p",null,"Returns the assets owned by the addresses"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param addresses:")," An array of addresses."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Information on owned assets"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'","_","change","_","type', 'locked', 'description', '","_","at","_","block', 'divisible', 'total","_","issued","_","normalized', '","_","at","_","block","_","time', 'asset', 'total","_","issued', 'owner', history:","[","]","]")),(0,s.kt)("h3",{id:"get_asset_pair_market_info"},"get","_","asset","_","pair","_","market","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_asset_pair_market_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","asset","_","pair","_","market","_","info(asset1=None, asset2=None, limit=50):")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use ",(0,s.kt)("inlineCode",{parentName:"p"},"get_market_details/get_market_info")),(0,s.kt)("p",null,"Given two arbitrary assets, returns the base asset and the quote asset."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," First asset name"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," Second asset name"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param limit:")," Max # of records to return"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Market info for the given pair"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'24h","_","vol","_","in","_","btc', 'open","_","orders","_","count', 'lowest","_","ask', 'base","_","asset', 'completed","_","trades","_","count', '24h","_","pct","_","change', 'vol","_","quote', 'highest","_","bid', '24h","_","vol","_","in","_","xcp', 'vol","_","base', 'last","_","updated', 'quote","_","asset'}")),(0,s.kt)("h3",{id:"get_asset_extended_info"},"get","_","asset","_","extended","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_asset_extended_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","asset","_","extended","_","info(asset)")),(0,s.kt)("p",null,"Returns extended asset data (i.e. that published via an external .json file, as documented ",(0,s.kt)("a",{parentName:"p",href:"/docs/assets/enhanced-asset/"},"here"),"), if available, for a specific asset."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset:"),' The name of the asset (e.g. "XUP")'),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Information on the asset or False if no extended info exists. Contains the data as documented in the extended asset info JSON format, among other fields."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {}")),(0,s.kt)("h3",{id:"get_asset_history"},"get","_","asset","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_asset_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","asset","_","history(asset, reverse=False")),(0,s.kt)("p",null,"Returns a list of changes for the specified asset, from its inception to the current time."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset:")," The asset to retrieve a history on"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param reverse:")," By default, the history is returned in the order of oldest to newest. Set this parameter to True to return items in the order of newest to oldest."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Changes are returned as a list of dicts, with each dict having the following format:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"type: One of 'created', 'issued","_","more', 'changed","_","description', 'locked', 'transferred', 'called","_","back'"),(0,s.kt)("li",{parentName:"ul"},"'at","_","block': The block number this change took effect"),(0,s.kt)("li",{parentName:"ul"},"'at","_","block","_","time': The block time this change took effect"),(0,s.kt)("li",{parentName:"ul"},"IF type = 'created': Has the following fields, as specified when the asset was initially created:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"owner, description, divisible, locked, total","_","issued, total","_","issued","_","normalized"))),(0,s.kt)("li",{parentName:"ul"},"IF type = 'issued","_","more':",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"'additional': The additional quantity issued (raw)"),(0,s.kt)("li",{parentName:"ul"},"'additional","_","normalized': The additional quantity issued (normalized)"),(0,s.kt)("li",{parentName:"ul"},"'total","_","issued': The total issuance after this change (raw)"),(0,s.kt)("li",{parentName:"ul"},"'total","_","issued","_","normalized': The total issuance after this change (normalized)"))),(0,s.kt)("li",{parentName:"ul"},"IF type = 'changed","_","description':",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"'prev","_","description': The old description"),(0,s.kt)("li",{parentName:"ul"},"'new","_","description': The new description"))),(0,s.kt)("li",{parentName:"ul"},"IF type = 'locked': NO EXTRA FIELDS"),(0,s.kt)("li",{parentName:"ul"},"IF type = 'transferred':",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"'prev","_","owner': The address the asset was transferred from"),(0,s.kt)("li",{parentName:"ul"},"'new","_","owner': The address the asset was transferred to"))),(0,s.kt)("li",{parentName:"ul"},"IF type = 'called","_","back':",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"'percentage': The percentage of the asset called back (between 0 and 100)")))))),(0,s.kt)("h3",{id:"get_balance_history"},"get","_","balance","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_balance_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","balance","_","history(asset, addresses, normalize=True, start","_","ts=None, end","_","ts=None)")),(0,s.kt)("p",null,"Retrieves the ordered balance history for a given address (or list of addresses) and asset pair, within the specified date range"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param normalize:")," If set to True, return quantities that (if the asset is divisible) have been divided by 100M (satoshi)."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," A list of tuples, with the first entry of each tuple being the block time (epoch TS), and the second being the new balance at that block time."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"[<block time>, <balance>]"))),(0,s.kt)("h2",{id:"dex-module"},"dex Module",(0,s.kt)("a",{parentName:"h2",href:"#dex-module"},"\u200b")),(0,s.kt)("h3",{id:"get_market_price_summary"},"get","_","market","_","price","_","summary",(0,s.kt)("a",{parentName:"h3",href:"#get_market_price_summary"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","price","_","summary(asset1, asset2, with","_","last","_","trades=0)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use ",(0,s.kt)("inlineCode",{parentName:"p"},"get_market_price_history")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param with","_","last","_","trades:")," Include last trades"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'quote","_","asset', 'base","_","asset', 'market","_","price',('last","_","trades')}")),(0,s.kt)("h3",{id:"get_market_cap_history"},"get","_","market","_","cap","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_market_cap_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","cap","_","history(start","_","ts=None, end","_","ts=None)")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," Unix timestamp (defaults to 30 days before the end timestamp)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," Unix timestamp (defaults to current timestamp)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"{'base_currency':[{'data':[ts,market_cap], 'name'}]}"))),(0,s.kt)("h3",{id:"get_market_info"},"get","_","market","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_market_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","info(assets)")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param list assets:")," Assets to check"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'24h","_","hlc","_","in","_","btc', 'extended","_","description', 'extended","_","pgpsig', 'aggregated","_","price","_","as","_","btc', 'price","_","in","_","btc', '24h","_","summary':{'vol', 'count'}, 'market","_","cap","_","in","_","btc', 'asset', 'price","_","as","_","xcp', '7d","_","history","_","in","_","btc':","[","[","ts, price","]","]",", '24h","_","vol","_","price","_","change","_","in","_","xcp', 'price","_","in","_","xcp', 'extended","_","website', '24h","_","vol","_","price","_","change","_","in","_","btc', 'aggregated","_","price","_","as","_","xcp', 'market","_","cap","_","in","_","xcp', '7d","_","history","_","in","_","xcp':","[","[","ts, price","]","]",", 'aggregated","_","price","_","in","_","btc', 'aggregated","_","price","_","in","_","xcp', 'price","_","as","_","btc', 'total","_","supply', '24h","_","ohlc","_","xcp', 'extended","_","image'}")),(0,s.kt)("h3",{id:"get_market_info_leaderboard"},"get","_","market","_","info","_","leaderboard",(0,s.kt)("a",{parentName:"h3",href:"#get_market_info_leaderboard"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","info","_","leaderboard(limit=100)")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param limit:")," Number of results to return"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {base","_","currency:","[","{ '24h","_","ohlc","_","in","_","btc', 'total","_","supply', 'aggregated","_","price","_","in","_","btc', 'price","_","in","_","btc', '24h","_","vol","_","price","_","change","_","in","_","xcp', 'aggregated","_","price","_","in","_","xcp', '24h","_","summary: {'vol', 'count'}, 'price","_","in","_","xcp', 'price","_","as","_","btc', 'market","_","cap","_","in","_","btc', '24h","_","ohlc","_","in","_","xcp', '24h","_","vol","_","price","_","change","_","in","_","btc', 'aggregated","_","price","_","as","_","xcp', 'market","_","cap","_","in","_","xcp', 'asset', 'price","_","as","_","xcp', '7d","_","history","_","in","_","xcp', '7d","_","history","_","in","_","btc', 'aggregated","_","price","_","as","_","btc'}","]","}")),(0,s.kt)("h3",{id:"get_market_price_history"},"get","_","market","_","price","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_market_price_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","price","_","history(asset1, asset2, start","_","ts=None, end","_","ts=None, as","_","dict=False)")),(0,s.kt)("p",null,"Return block-by-block aggregated market history data for the specified asset pair, within the specified date range."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," An asset ."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," Unix timestamp (defaults to 30 days before the end timestamp)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," Unix timestamp (defaults to current timestamp)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param as","_","dict:")," Return as list of list or list of dicts"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," List of lists or dicts"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'block","_","time', 'block","_","index', 'open', 'high', 'low', 'close', 'vol', 'count'}","]")),(0,s.kt)("h3",{id:"get_trade_history"},"get","_","trade","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_trade_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","trade","_","history(asset1=None, asset2=None, start","_","ts=None, end","_","ts=None, limit=50)")),(0,s.kt)("p",null,"Gets last N of trades within a specific date range (normally, for a specified asset pair, but this can be left blank to get any/all trades)."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," An asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param limit:")," Number of trades to return"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Array of length ",(0,s.kt)("inlineCode",{parentName:"li"},"n")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'base","_","quantity', 'message","_","index', 'order","_","match","_","tx1","_","index', 'base","_","asset', 'quote","_","quantity', 'order","_","match","_","tx0","_","address', 'unit","_","price', 'base","_","quantity","_","normalized', 'block","_","index', 'block","_","time', 'quote","_","quantity","_","normalized', 'unit","_","price","_","inverse', 'order","_","match","_","tx0","_","index', 'order","_","match","_","id', 'order","_","match","_","tx1","_","address', 'quote","_","asset'}","]")),(0,s.kt)("h3",{id:"get_order_book_simple"},"get","_","order","_","book","_","simple",(0,s.kt)("a",{parentName:"h3",href:"#get_order_book_simple"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","order","_","book","_","simple(asset1, asset2, min","_","pct","_","fee","_","provided=None, max","_","pct","_","fee","_","required=None)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use unoparty-server's ",(0,s.kt)("inlineCode",{parentName:"p"},"get_orders")),(0,s.kt)("p",null,"Easier to call version when you want all orders involving the two assets."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset1:")," Asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param asset2:")," Asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param pct","_","fee","_","provided:")," A minimum fee level in satoshis"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param pct","_","fee","_","required:")," A minimum fee level in satoshis"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Object"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'base","_","bid","_","book':","[","{'count', 'depth', 'unit","_","price', 'quantity'}","]",", 'bid","_","depth', 'raw","_","orders:","[","{ 'status', 'tx","_","hash', 'give","_","quantity', '","_","is","_","online', 'fee","_","provided', 'source', 'give","_","asset', 'expire","_","index', 'fee","_","required","_","remaining', 'block","_","index', 'tx","_","index', 'give","_","remaining', 'block","_","time', 'get","_","asset', 'expiration', 'fee","_","required', 'get","_","remaining', 'get","_","quantity', 'fee","_","provided","_","remaining'}","]",", 'bid","_","ask","_","median', 'quote","_","asset', 'base","_","asset', 'ask","_","depth', 'bid","_","ask","_","spread', 'base","_","ask","_","book':","[","{'count', 'depth', 'unit","_","price', 'quantity'}","]",", 'id'}")),(0,s.kt)("h3",{id:"get_order_book_buysell"},"get","_","order","_","book","_","buysell",(0,s.kt)("a",{parentName:"h3",href:"#get_order_book_buysell"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","order","_","book","_","buysell(buy","_","asset, sell","_","asset, pct","_","fee","_","provided=None, pct","_","fee","_","required=None)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.5")," Use unoparty-server's ",(0,s.kt)("inlineCode",{parentName:"p"},"get_orders")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param buy","_","asset:")," Asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param sell","_","asset:")," Asset"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param pct","_","fee","_","provided:")," A minimum fee level in satoshis"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param pct","_","fee","_","required:")," A minimum fee level in satoshis"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Object"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'base","_","bid","_","book':","[","{'count', 'depth', 'unit","_","price', 'quantity'}","]",", 'bid","_","depth', 'raw","_","orders:","[","{ 'status', 'tx","_","hash', 'give","_","quantity', '","_","is","_","online', 'fee","_","provided', 'source', 'give","_","asset', 'expire","_","index', 'fee","_","required","_","remaining', 'block","_","index', 'tx","_","index', 'give","_","remaining', 'block","_","time', 'get","_","asset', 'expiration', 'fee","_","required', 'get","_","remaining', 'get","_","quantity', 'fee","_","provided","_","remaining'}","]",", 'bid","_","ask","_","median', 'quote","_","asset', 'base","_","asset', 'ask","_","depth', 'bid","_","ask","_","spread', 'base","_","ask","_","book':","[","{'count', 'depth', 'unit","_","price', 'quantity'}","]",", 'id'}")),(0,s.kt)("h3",{id:"get_users_pairs"},"get","_","users","_","pairs",(0,s.kt)("a",{parentName:"h3",href:"#get_users_pairs"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","users","_","pairs(addresses=","[","]",", max","_","pairs=12)")),(0,s.kt)("p",null,"Return asset pairs held by the addresses."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'base","_","asset', 'progression', 'trend', 'price","_","24h', 'price', 'quote","_","asset'}","]")),(0,s.kt)("h3",{id:"get_market_orders"},"get","_","market","_","orders",(0,s.kt)("a",{parentName:"h3",href:"#get_market_orders"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","orders(asset1, asset2, addresses=","[","]",", min","_","fee","_","provided=0.95, max","_","fee","_","required=0.95)")),(0,s.kt)("p",null,"Returns orders for the search parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'completion', 'tx","_","hash', 'fee","_","provided', 'block","_","index', 'price', 'tx","_","index', 'source', 'amount', 'block","_","time', 'total', 'type'}","]")),(0,s.kt)("h3",{id:"get_market_trades"},"get","_","market","_","trades",(0,s.kt)("a",{parentName:"h3",href:"#get_market_trades"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","trades(asset1, asset2, addresses=","[","]",", limit=100)")),(0,s.kt)("p",null,"Returns completed trades for the search parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'status', 'match","_","id', 'countersource', 'block","_","index', 'price', 'source', 'amount', 'block","_","time', 'total', 'type'}","]")),(0,s.kt)("h3",{id:"get_markets_list"},"get","_","markets","_","list",(0,s.kt)("a",{parentName:"h3",href:"#get_markets_list"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","markets","_","list()")),(0,s.kt)("p",null,"Returns available markets"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'market","_","cap', 'base","_","asset', 'progression', 'supply', 'trend', 'price","_","24h', 'price', ' quote","_","divisibility', 'pos', 'volume', 'with","_","image', 'base","_","divisibility', 'quote","_","asset'}","]")),(0,s.kt)("h3",{id:"get_market_details"},"get","_","market","_","details",(0,s.kt)("a",{parentName:"h3",href:"#get_market_details"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","market","_","details(asset1, asset2, min","_","fee","_","provided=0.95, max","_","fee","_","required=0.95)")),(0,s.kt)("p",null,"Return detailed information on a market."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'base","_","asset','progression','supply', 'trend','price","_","24h', 'price','sell","_","orders': ","[","{'fee","_","required', 'amount', 'total', 'type', 'price'}","]",",'quote","_","asset","_","divisible','buy","_","orders': ","[","{'amount', 'total', 'type', 'price', 'fee","_","provided'}","]",", 'last","_","trades': ","[","{'status', 'match","_","id', 'countersource', 'source', 'price', 'block","_","index', 'amount', 'block","_","time', 'total', 'type'}","]",",'base","_","asset","_","infos','base","_","asset","_","divisible','quote","_","asset'}")),(0,s.kt)("h2",{id:"betting-module"},"betting Module",(0,s.kt)("a",{parentName:"h2",href:"#betting-module"},"\u200b")),(0,s.kt)("h3",{id:"get_bets"},"get","_","bets",(0,s.kt)("a",{parentName:"h3",href:"#get_bets"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","bets(bet","_","type, feed","_","address, deadline, target","_","value=None, leverage=5040)")),(0,s.kt)("p",null,"Returns bets with non-zero remaining counterwager for the specified search terms."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param bet","_","type:")," 0, 1, 2 or 3"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param feed","_","address:")," An address"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param deadline:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'tx","_","hash' 'feed","_","address', 'wager","_","quantity', 'leverage', 'source', 'expire","_","index', 'status', 'tx","_","index', 'block","_","index', 'counterwager","_","quantity', 'deadline', 'expiration', 'fee","_","fraction","_","int', 'bet","_","type', 'counterwager","_","remaining', 'wager","_","remaining', 'target","_","value' }","]")),(0,s.kt)("h3",{id:"get_user_bets"},"get","_","user","_","bets",(0,s.kt)("a",{parentName:"h3",href:"#get_user_bets"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","user","_","bets(addresses=","[","]",', status="open")')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param addresses:")," List of addresses"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param status:"),' "open", "filled","expired","cancelled","dropped", or "invalid"'),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'tx","_","hash' 'feed","_","address', 'wager","_","quantity', 'leverage', 'source', 'expire","_","index', 'status', 'tx","_","index', 'block","_","index', 'counterwager","_","quantity', 'deadline', 'expiration', 'fee","_","fraction","_","int', 'bet","_","type', 'counterwager","_","remaining', 'wager","_","remaining', 'target","_","value' }","]")),(0,s.kt)("h3",{id:"get_feed"},"get","_","feed",(0,s.kt)("a",{parentName:"h3",href:"#get_feed"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","feed(address","_","or","_","url='')")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param address","_","or","_","url:")," Feed URL or Unobtanium Address"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'broadcasts':","[","{'status', 'tx","_","hash', 'locked', 'timestamp', 'source', 'text', 'tx","_","index', 'value', 'block","_","index', 'fee","_","fraction","_","int'}","]",", 'counters':{'bets':","[","]","}")),(0,s.kt)("h3",{id:"get_feeds_by_source"},"get","_","feeds","_","by","_","source",(0,s.kt)("a",{parentName:"h3",href:"#get_feeds_by_source"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","feeds","_","by","_","source(addresses=","[","]",")")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param addresses:")," Address list"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"{<address>:{'errors':[], 'locked', 'info_url', 'info_data':{}, 'fetch_info_retry', 'source', 'info_status', 'fee_fraction_int', 'last_broadcast':{}}}"))),(0,s.kt)("h3",{id:"parse_base64_feed"},"parse","_","base64","_","feed",(0,s.kt)("a",{parentName:"h3",href:"#parse_base64_feed"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"parse","_","base64","_","feed(base64","_","feed):")),(0,s.kt)("p",null,"Takes a base64-encoded feed and decodes it."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","{'tx","_","hash' 'feed","_","address', 'wager","_","quantity', 'leverage', 'source', 'expire","_","index', 'status', 'tx","_","index', 'block","_","index', 'counterwager","_","quantity', 'deadline', 'expiration', 'fee","_","fraction","_","int', 'bet","_","type', 'counterwager","_","remaining', 'wager","_","remaining', 'target","_","value' }","]")),(0,s.kt)("h2",{id:"unowallet-module"},"unowallet Module",(0,s.kt)("a",{parentName:"h2",href:"#unowallet-module"},"\u200b")),(0,s.kt)("h3",{id:"is_ready"},"is","_","ready",(0,s.kt)("a",{parentName:"h3",href:"#is_ready"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"is","_","ready()")),(0,s.kt)("p",null,"Used by the client to check if the server is alive, caught up, and ready to accept requests. If the server is NOT caught up, a 525 error will be returned actually before hitting this point. Thus, if we actually return data from this function, it should always be true. (may change this behaviour later)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," Boolean")),(0,s.kt)("h3",{id:"get_reflected_host_info"},"get","_","reflected","_","host","_","info",(0,s.kt)("a",{parentName:"h3",href:"#get_reflected_host_info"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","reflected","_","host","_","info()")),(0,s.kt)("p",null,"Allows the requesting host to get some info about itself, such as its IP. Used for troubleshooting."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Client host info"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'ip', 'cookie', 'country'}")),(0,s.kt)("h3",{id:"get_wallet_stats"},"get","_","wallet","_","stats",(0,s.kt)("a",{parentName:"h3",href:"#get_wallet_stats"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","wallet","_","stats(start","_","ts=None, end","_","ts=None):")),(0,s.kt)("p",null,"If timestamps omitted, queries the last 360 days."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," Wallet information"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'wallet","_","stats':","[","id: {'data': ","[","{}","]",", 'name'}","]",", 'num","_","wallets","_","testnet', 'num","_","wallets","_","mainnet', 'num","_","wallets","_","unknown'}")),(0,s.kt)("h3",{id:"get_preferences"},"get","_","preferences",(0,s.kt)("a",{parentName:"h3",href:"#get_preferences"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","preferences(wallet","_","id, for","_","login=False, network=None)")),(0,s.kt)("p",null,"Gets stored wallet preferences"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param network:")," only required if for","_","login is specified. One of: 'mainnet' or 'testnet'"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"returns:")," A wallet preferences object:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"num","_","addresses","_","used")," (",(0,s.kt)("em",{parentName:"li"},"integer"),"): The number of addresses utilized in the user's wallet (this determines how many addresses we will deterministally generate when the user logs in)."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"address","_","aliases")," (",(0,s.kt)("em",{parentName:"li"},"list"),"): A list of zero or objects, with each object having an ",(0,s.kt)("inlineCode",{parentName:"li"},"address")," string property, being the Unobtanium base56 address, and an ",(0,s.kt)("inlineCode",{parentName:"li"},"alias")," string property, being the textual alias (i.e. nickname) for this address. Using aliases helps make the wallet more user-friendly."))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," Boolean")),(0,s.kt)("h3",{id:"store_preferences"},"store","_","preferences",(0,s.kt)("a",{parentName:"h3",href:"#store_preferences"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"store","_","preferences(wallet","_","id, preferences)")),(0,s.kt)("p",null,"Stores the preferences for a given wallet ID."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param string wallet","_","id:")," The wallet ID to store the preferences for."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param object preferences:")," A wallet preferences object (see above)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," ",(0,s.kt)("inlineCode",{parentName:"li"},"true")," if the storage was successful, ",(0,s.kt)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,s.kt)("h3",{id:"create_armory_utx"},"create","_","armory","_","utx",(0,s.kt)("a",{parentName:"h3",href:"#create_armory_utx"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"create","_","armory","_","utx(unsigned","_","tx","_","hex, public","_","key","_","hex)")),(0,s.kt)("p",null,"Used to create an offline Armory transaction for signing in Armory."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"returns:")," The signed tx hash"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," String")),(0,s.kt)("h3",{id:"convert_armory_signedtx_to_raw_hex"},"convert","_","armory","_","signedtx","_","to","_","raw","_","hex",(0,s.kt)("a",{parentName:"h3",href:"#convert_armory_signedtx_to_raw_hex"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"convert","_","armory","_","signedtx","_","to","_","raw","_","hex(signed","_","tx","_","ascii)")),(0,s.kt)("p",null,"Used to convert a signed armory transaction to a hex-encoded raw transaction suitable for broadcasting on the Unobtanium network."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"returns:")," The raw hash as hex"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," String")),(0,s.kt)("h3",{id:"create_support_case"},"create","_","support","_","case",(0,s.kt)("a",{parentName:"h3",href:"#create_support_case"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"create","_","support","_","case(name, from","_","email, problem, screenshot=None, addtl","_","info='')")),(0,s.kt)("p",null,"create an email with the information received"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param screenshot:")," The base64 text of the screenshot itself, prefixed with data=image/png"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param addtl","_","info:")," A JSON-encoded string of a dict with additional information to include in the support request")),(0,s.kt)("h2",{id:"unowallet_iofeeds-module"},"unowallet","_","iofeeds Module",(0,s.kt)("a",{parentName:"h2",href:"#unowallet_iofeeds-module"},"\u200b")),(0,s.kt)("h3",{id:"get_num_users_online"},"get","_","num","_","users","_","online",(0,s.kt)("a",{parentName:"h3",href:"#get_num_users_online"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","num","_","users","_","online()")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," The current number of users attached to the server's chat feed :rtype: Int")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.6.3")),(0,s.kt)("h3",{id:"is_chat_handle_in_use"},"is","_","chat","_","handle","_","in","_","use",(0,s.kt)("a",{parentName:"h3",href:"#is_chat_handle_in_use"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"is","_","chat","_","handle","_","in","_","use(handle)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.6.3")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," Boolean")),(0,s.kt)("h3",{id:"get_chat_handle"},"get","_","chat","_","handle",(0,s.kt)("a",{parentName:"h3",href:"#get_chat_handle"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","chat","_","handle(wallet","_","id)")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," {'handle', 'is","_","op', 'last","_","updated', 'banned","_","until'}")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.6.3")),(0,s.kt)("h3",{id:"store_chat_handle"},"store","_","chat","_","handle",(0,s.kt)("a",{parentName:"h3",href:"#store_chat_handle"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"store","_","chat","_","handle(wallet","_","id, handle)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.6.3")),(0,s.kt)("h3",{id:"get_chat_history"},"get","_","chat","_","history",(0,s.kt)("a",{parentName:"h3",href:"#get_chat_history"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","chat","_","history(start","_","ts=None, end","_","ts=None, handle=None, limit=1000)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"deprecated: 1.6.3")),(0,s.kt)("h3",{id:"is_wallet_online"},"is","_","wallet","_","online",(0,s.kt)("a",{parentName:"h3",href:"#is_wallet_online"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"is","_","wallet","_","online(wallet","_","id)")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," Boolean")),(0,s.kt)("h2",{id:"transaction_stats-module"},"transaction","_","stats Module",(0,s.kt)("a",{parentName:"h2",href:"#transaction_stats-module"},"\u200b")),(0,s.kt)("h3",{id:"get_transaction_stats"},"get","_","transaction","_","stats",(0,s.kt)("a",{parentName:"h3",href:"#get_transaction_stats"},"\u200b")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"get","_","transaction","_","stats(start","_","ts=None, end","_","ts=None)")),(0,s.kt)("p",null,"This function returns the number of transactions in each 24 hour clock within the given time range, or the last 360 days if no time range is given."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param start","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"param end","_","ts:")," Unix timestamp"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"return:")," The number of transactions in each time interval."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"rtype:")," ","[","[",(0,s.kt)("inlineCode",{parentName:"li"},"unix timestamp *in milliseconds* (e.g. 1000 * a typical unix timestamp)"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"transaction count"),"]","]")))}m.isMDXComponent=!0}}]);